#!/usr/bin/env python

import os
import sys
import pyfits
from struct import *
from scipy import *

sys.path.append('/home/mmtao/ao/python')
import dsclient as ds

if len(sys.argv) != 3:
    print " "
    print "Usage: config_bias <value> <tol>"
    print "       <value> - desired bias level in counts"
    print "       <tol>   - tolerance between actual and desired bias level (10 is recommended)"
    exit()

target = float(sys.argv[1])
tol = float(sys.argv[2])
quad = [0.0, 0.0, 0.0, 0.0]

set = False

while set == False:
    image = ds.ave_frames(25)
    (xsize, ysize) = image.shape

    info = ds.get_info()

    """ measure mean within each quadrant """
    quad[0] = mean(image[0:xsize/2-1,0:ysize/2-1])
    quad[1] = mean(image[0:xsize/2-1,ysize/2:])
    quad[2] = mean(image[xsize/2:,0:ysize/2-1])
    quad[3] = mean(image[xsize/2:,ysize/2:])

    """ change bias by +/-1 until tol is met, stop when all 4 are good """
    nset = 0
    for i in range(0,4):
        diff = quad[i] - target
        bias = int(info["WFSC_Bias_" + str(i)])
        print "Quadrant " + str(i) + " has a bias level of " + str(bias)
        if abs(diff) < tol:
            print "\tcounts are close to target value."
            nset = nset + 1
        elif diff < -1*tol:
            print "\tits counts are low by " + str(diff) + " counts."
            bias = bias - 1
            print "\tset bias to " + str(bias) + "...."
            ds.set_bias(i,bias)
        else:
            print "\tits counts are high by " + str(diff) + " counts."
            bias = bias + 1
            print "\tset bias to " + str(bias) + "...."
            ds.set_bias(i,bias)

    print " "
    if nset == 4:
        set = True
